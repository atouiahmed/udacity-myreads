{"version":3,"sources":["components/OptionsItemList.js","BooksAPI.js","components/OptionsList.js","components/BooksItemList.js","components/GroupBooks.js","Search.js","Home.js","App.js","index.js"],"names":["OptionsItemList","_this$props","this","props","value","text","react_default","a","createElement","Component","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","OptionsList","handleSelectChange","_this","onOptionSelect","_this2","className","onChange","event","target","disabled","selected","components_OptionsItemList","BooksItemList","title","authors","imageLinks","style","width","height","backgroundImage","thumbnail","components_OptionsList","join","GroupBooks","books","map","components_BooksItemList","key","Search","state","query","closeSearch","onCloseSearch","handleInputChange","setState","doSearch","emptyBooks","setBooks","str","data","response","error","_this3","onClick","onKeyUp","type","placeholder","React","Home","goSearch","onGoSearch","_this$props$lists","lists","currentlyReading","wantToRead","read","components_GroupBooks","BooksApp","handleSelectOptionChange","list","BooksAPI","addBook","filter","b","removeBookFromLists","currentState","defineProperty","toConsumableArray","react_router","exact","path","render","_ref","history","src_Home","push","_ref2","src_Search","ReactDOM","react_router_dom","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3c2c2ca1.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass OptionsItemList extends Component {\r\n\r\n    static propTypes = {\r\n        value: PropTypes.string.isRequired,\r\n        text: PropTypes.string.isRequired,\r\n\r\n    };\r\n\r\n    render() {\r\n        const {value, text} = this.props;\r\n        return (\r\n            <option value={value}>{text}</option>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionsItemList;","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, {Component} from 'react'\r\nimport OptionsItemList from \"./OptionsItemList\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\n\r\nclass OptionsList extends Component {\r\n\r\n    static propTypes = {\r\n        book: PropTypes.object.isRequired,\r\n    };\r\n    handleSelectChange = (value) => {\r\n        this.props.onOptionSelect(value, this.props.book);\r\n\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"book-shelf-changer\">\r\n                <select onChange={(event) => this.handleSelectChange(event.target.value)}>\r\n                    <option value=\"move\" disabled selected>Move to...</option>\r\n                    <OptionsItemList value=\"currentlyReading\" text=\"Currently Reading\"/>\r\n                    <OptionsItemList value=\"wantToRead\" text=\"Want to Read\"/>\r\n                    <OptionsItemList value=\"read\" text=\"Read\"/>\r\n                    <OptionsItemList value=\"none\" text=\"None\"/>\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OptionsList;","import React, {Component} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport OptionsList from \"./OptionsList\";\r\n\r\nclass BooksItemList extends Component {\r\n\r\n    static propTypes = {\r\n        book: PropTypes.object.isRequired,\r\n        onOptionSelect: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    render() {\r\n        const {book, onOptionSelect} = this.props;\r\n        const {title, authors, imageLinks} = book;\r\n        return (\r\n            <li>\r\n                <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{\r\n                            width: 128,\r\n                            height: 193,\r\n                            backgroundImage: `url(${imageLinks ? imageLinks.thumbnail : ''})`\r\n                        }}></div>\r\n                        <OptionsList onOptionSelect={onOptionSelect} book={book}/>\r\n\r\n                    </div>\r\n                    <div className=\"book-title\">{title}</div>\r\n                    {(authors && (\r\n                        <div className=\"book-authors\">{authors.join(' , ')}</div>\r\n                    ))}\r\n\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BooksItemList;","import React, {Component} from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport BooksItemList from \"./BooksItemList\";\r\n\r\nclass GroupBooks extends Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        books: PropTypes.string.array,\r\n        onOptionSelect: PropTypes.func.isRequired,\r\n\r\n    };\r\n\r\n    render() {\r\n        const {title, books, onOptionSelect} = this.props;\r\n        return (\r\n            <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                        {books.map(book => (\r\n                            <BooksItemList onOptionSelect={onOptionSelect} key={book.id} book={book}/>\r\n                        ))}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GroupBooks;","import React from 'react'\r\n// import * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport GroupBooks from \"./components/GroupBooks\";\r\nimport {Route} from \"react-router-dom\";\r\nimport * as BooksAPI from \"./BooksAPI\"\r\nimport BooksItemList from \"./components/BooksItemList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Search extends React.Component {\r\n\r\n    static propTypes = {\r\n        onOptionSelect: PropTypes.func.isRequired,\r\n    };\r\n    state = {\r\n        query: '',\r\n        books: [],\r\n    };\r\n    closeSearch = () => {\r\n        this.props.onCloseSearch();\r\n    };\r\n\r\n    handleInputChange = (value) => {\r\n        this.setState(() => ({\r\n            query: value\r\n        }));\r\n        if (value) {\r\n            this.doSearch(value);\r\n        } else {\r\n            this.emptyBooks();\r\n        }\r\n    };\r\n    setBooks = (books) => {\r\n        this.setState(() => ({\r\n            books: books\r\n        }));\r\n    };\r\n    emptyBooks = () => {\r\n        this.setBooks([]);\r\n    };\r\n\r\n    doSearch(str) {\r\n        BooksAPI.search(str).then((response) => {\r\n            if (response && !response.error) {\r\n                this.setBooks(response)\r\n            } else {\r\n                this.emptyBooks();\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"search-books\">\r\n                    <div className=\"search-books-bar\">\r\n                        <button className=\"close-search\"\r\n                                onClick={this.closeSearch}>Close\r\n                        </button>\r\n                        <div className=\"search-books-input-wrapper\">\r\n                            <input onKeyUp={(event) => this.handleInputChange(event.target.value)} type=\"text\"\r\n                                   placeholder=\"Search by title or author\"/>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"search-books-results\">\r\n                        <ol className=\"books-grid\">\r\n                            {this.state.books.map(book => (\r\n                                <BooksItemList key={book.id} book={book} onOptionSelect={this.props.onOptionSelect}/>\r\n                            ))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n// import * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport GroupBooks from \"./components/GroupBooks\";\r\nimport {Route} from \"react-router-dom\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Home extends React.Component {\r\n\r\n    static propTypes = {\r\n        lists: PropTypes.array.isRequired,\r\n    };\r\n    goSearch = () => {\r\n        this.props.onGoSearch();\r\n    };\r\n\r\n    render() {\r\n        const {currentlyReading, wantToRead, read} = this.props.lists;\r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>MyReads</h1>\r\n                </div>\r\n                <div className=\"list-books-content\">\r\n                    <div>\r\n                        <GroupBooks title=\"Currently Reading\" books={currentlyReading}\r\n                                    onOptionSelect={this.props.onOptionSelect}/>\r\n                        <GroupBooks title=\"Want to Read\" books={wantToRead}\r\n                                    onOptionSelect={this.props.onOptionSelect}/>\r\n                        <GroupBooks title=\"Read\" books={read}\r\n                                    onOptionSelect={this.props.onOptionSelect}/>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <button onClick={this.goSearch}>Add a book</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\n// import * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport GroupBooks from \"./components/GroupBooks\";\r\nimport {Route} from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport Home from \"./Home\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\n\r\nclass BooksApp extends React.Component {\r\n    state = {\r\n        lists: {\r\n            currentlyReading: [],\r\n            wantToRead: [],\r\n            read: [],\r\n        }\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        BooksAPI.getAll().then((books) => {\r\n            this.setBooks(books);\r\n        })\r\n    }\r\n\r\n    handleSelectOptionChange = (list, book) => {\r\n        BooksAPI.update(book, list);\r\n        this.addBook(list, book);\r\n    };\r\n\r\n    setBooks = (books) => {\r\n        this.setState(() => ({\r\n            lists: {\r\n                currentlyReading: books.filter(b => b.shelf === 'currentlyReading'),\r\n                wantToRead: books.filter(b => b.shelf === 'wantToRead'),\r\n                read: books.filter(b => b.shelf === 'read'),\r\n            }\r\n        }))\r\n    };\r\n    addBook = (list, book) => {\r\n        this.removeBookFromLists(book);\r\n        if (list !== 'none') {\r\n            this.setState((currentState) => ({\r\n                lists: {\r\n                    ...currentState.lists,\r\n                    [list]: [...currentState.lists[list], book],\r\n                }\r\n            }))\r\n        }\r\n    };\r\n    removeBookFromLists = (book) => {\r\n        this.setState((currentState) => ({\r\n            lists: {\r\n                currentlyReading: currentState.lists.currentlyReading.filter(b => b.id !== book.id),\r\n                wantToRead: currentState.lists.wantToRead.filter(b => b.id !== book.id),\r\n                read: currentState.lists.read.filter(b => b.id !== book.id),\r\n            }\r\n        }))\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <Route exact path='/' render={({history}) => (\r\n                    <Home onGoSearch={() => {\r\n                        history.push('/search');\r\n                    }} onOptionSelect={this.handleSelectOptionChange} lists={this.state.lists}/>\r\n                )}/>\r\n                <Route path='/search' render={({history}) => (\r\n                    <Search onCloseSearch={() => {\r\n                        history.push('/');\r\n                    }} onOptionSelect={this.handleSelectOptionChange}/>\r\n                )}/>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App/>\r\n    </BrowserRouter>\r\n    , document.getElementById('root'))\r\n"],"sourceRoot":""}